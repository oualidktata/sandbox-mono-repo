name: user-console CI

env:
  node-version: 16.x
  NX_BRANCH: ${{github.event.number}}
  NX_RUN_GROUP: ${{github.run_id}}
on:
  push:
    branches:
      - main
    paths-ignore:
     - '**.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{matrix.operating-system}}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
          cache: npm
      
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-modules-${{hashFiles('**/package-lock.json')}}
      
      #- name: Install dependencies
       # uses: npm/action-setup@2.0.1
        #with:
        #  version: 6.24.3
        #  run_install: |
         #   - args: [--frozen-lockfile,--strict-peer-dependencies]
          
      - run: npm install
      - run: npm run nx build
      #- run: npm format:check -- --base=remotes/origin/main
      #- run: npm run affected:e2e -- --base=remotes/origin/main
      #- run: npm format:check
      #- run: npm affected:deploy --base main --head
      #- uses: nrwl/nx-set-shas@v2
      #- run: npm ci
        #   node-version: ${{ env.node-version }}
          # cache: npm
      #- run: npx nx affected --target=build
      #- run: npx nx affected --target=test

  # test-all:
  #   name: test-all-dependencies
  #   runs-on: ${{matrix.operating-system}}
  #   steps:
  #     - run: npx nx affected --target=test --ci



      # - uses: nrwl/nx-set-shas@v2
      # - run: npm ci
      # - run: npx nx workspace-lint
      # - run: npx nx format:check
      # - run: npx nx affected --target=lint --parallel=3
      # - run: npx nx affected --target=test --parallel=3 --ci --code-coverage





